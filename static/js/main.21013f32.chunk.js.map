{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","person","name","href","email","CardList","children","persons","map","id","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchfield","target","value","state","monsters","apiUrl","fetch","then","response","json","users","catch","console","log","this","filteredMonsters","filter","monster","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAGaA,EAAQ,SAAAC,GACjB,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKC,IAAI,eAAeC,IAAG,+BAA0BH,EAAMI,OAAOC,KAAvC,eAC3B,6BAAKL,EAAMI,OAAOC,OAClB,wCAAU,mBAAGC,KAAI,iBAAYN,EAAMI,OAAOG,OAAhC,SAA0CP,EAAMI,OAAOG,QAAjE,WCHCC,EAAW,SAACR,GAErB,OAEI,gCACI,8BAAMA,EAAMS,WACZ,qBAAKR,UAAU,YAAf,SACKD,EAAMU,QAAQC,KAAI,SAAAP,GAAM,OACrB,cAAC,EAAD,CAAsBA,OAAQA,GAAnBA,EAAOQ,aCXzBC,EAAY,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aACpC,OACI,uBACMC,KAAK,SACLF,YAAaA,EACbG,SAAUF,KCuCTG,E,kDAzCb,aAAe,IAAD,8BACZ,gBAeFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAdtC,EAAKC,MAAQ,CACXC,SAAU,GACVJ,YAAa,IALH,E,qDAQd,WAAqB,IAAD,OACZK,EAAS,6CACfC,MAAMD,GACHE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKX,SAAS,CAAEK,SAAUM,OAC1CC,OAAM,kBAAMC,QAAQC,IAAI,wBAAyBR,Q,oBAOtD,WAAU,IAAD,EAC2BS,KAAKX,MAA/BC,EADD,EACCA,SAAUJ,EADX,EACWA,YACZe,EAAmBX,EAASY,QAAO,SAACC,GAAD,OACvCA,EAAQjC,KAAKkC,cAAcC,SAASnB,EAAYkB,kBAElD,OACE,qBAAKtC,UAAU,MAAf,SAEI,gCAEE,cAAC,EAAD,CAAWa,YAAY,iBAAkBC,aAAcoB,KAAKpB,eAC5D,cAAC,EAAD,CAAUL,QAAS0B,EAAnB,SACE,mD,GAjCIK,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.21013f32.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props => {\r\n    return(\r\n        <div className=\"card\">\r\n            <img alt=\"user profile\" src={`https://robohash.org/${props.person.name}?set=set4`}  />\r\n            <h2>{props.person.name}</h2>\r\n            <p>Mail : <a href={`mailto:${props.person.email}`}>{props.person.email}</a> </p>\r\n        </div>\r\n    )\r\n})","import React from 'react';\r\nimport './card-list.styles.css';\r\n\r\nimport { Card } from '../card/card.component';\r\n\r\nexport const CardList = (props) => {\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div>{props.children}</div>\r\n            <div className=\"card-list\">\r\n                {props.persons.map(person => (\r\n                    <Card key={person.id} person={person}></Card>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport const SearchBox = ({placeholder, handleChange})=>{\r\n    return(\r\n        <input\r\n              type=\"search\"\r\n              placeholder={placeholder}\r\n              onChange={handleChange}\r\n                \r\n              \r\n        />\r\n    )\r\n}","import \"./App.css\";\r\nimport React, { Component } from \"react\";\r\nimport { CardList } from \"./components/card-list/card-list.component\";\r\nimport { SearchBox } from \"./components/search-box/search-box.component\";\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      monsters: [],\r\n      searchfield: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const apiUrl = \"https://jsonplaceholder.typicode.com/users\";\r\n    fetch(apiUrl)\r\n      .then((response) => response.json())\r\n      .then((users) => this.setState({ monsters: users }))\r\n      .catch(() => console.log(\"Can't get users from \", apiUrl));\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({ searchfield: e.target.value });\r\n  }\r\n  \r\n  render() {\r\n    const { monsters, searchfield } = this.state;\r\n    const filteredMonsters = monsters.filter((monster) =>\r\n      monster.name.toLowerCase().includes(searchfield.toLowerCase())\r\n    );\r\n    return (\r\n      <div className=\"App\">\r\n        {\r\n          <div>\r\n            \r\n            <SearchBox placeholder=\"Search a miaou\"  handleChange={this.handleChange}/>\r\n            <CardList persons={filteredMonsters}>\r\n              <h1>Miaouu</h1>\r\n            </CardList>\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}